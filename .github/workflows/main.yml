name: Django CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pull from GitHub on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@52.4.229.207 << EOF
            cd /home/ubuntu/WH/pc
            git checkout main
            git reset --hard HEAD
            git pull origin main
          EOF

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build --build-arg DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} -t myapp .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          CLOUDFRONT_DOMAIN: ${{ secrets.CLOUDFRONT_DOMAIN }}
          DJANGO_SETTINGS_MODULE: project.settings
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@52.4.229.207 << EOF
            cd /home/ubuntu/WH/pc
            git reset --hard HEAD
            git pull origin main

            export DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
            export SQL_USER=${SQL_USER}
            export SQL_PASSWORD=${SQL_PASSWORD}
            export AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
            export CLOUDFRONT_DOMAIN=${CLOUDFRONT_DOMAIN}
            export DJANGO_SETTINGS_MODULE=project.settings
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

            docker compose down
            docker compose up --build -d
          EOF

      - name: Clean up static files in S3 and upload new ones
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}

        run: |
          pip install awscli
          aws s3 rm s3://v5-bucket-list/static/ --recursive --exclude "*/"
          docker compose exec web python manage.py collectstatic --noinput
